services:
  nginx-1:
    container_name: nginx-1
    image: nginx:alpine
    volumes:
      - "./modules/nginx_module/files/html/index.10.html:/usr/share/nginx/html/index.html"
    networks:
      internal-1:
        ipv4_address: 10.10.10.10

  nginx-2:
    container_name: nginx-2
    image: nginx:alpine
    volumes:
      - "./modules/nginx_module/files/html/index.20.html:/usr/share/nginx/html/index.html"
    networks:
      internal-2:
        ipv4_address: 20.20.20.20

  puppet-server:
    container_name: puppet-server
    image: puppet/puppetserver
    hostname: puppet
    environment:
      - AUTOSIGN=true
      - USE_PUPPETDB=false
      - CA_ENABLED=true
      - CA_HOSTNAME=puppet
      - CA_MASTERPORT=8140
      - CA_ALLOW_SUBJECT_ALT_NAMES=false
    restart: unless-stopped
    volumes:
      - "./modules/nginx_module/manifests/init.pp:/etc/puppetlabs/code/environments/production/manifests/nginx_module.pp"
    networks:
      - puppet

  puppet-agent:
    container_name: puppet-agent-nginx
    hostname: "domain.com"
    image: puppet/puppet-agent
    volumes:
      - "./modules/nginx_module/files/puppet-agent/entrypoint.sh:/root/entrypoint.sh"
    entrypoint: /root/entrypoint.sh
    depends_on:
      puppet-server:
        condition: service_healthy
    networks:
      - puppet
      - internal-1
      - internal-2

  # # Logging Stack


  mongodb:
    image: mongo:4.2
    container_name: mongodb
    volumes:
      - mongodb_data:/data/db
    restart: on-failure
    networks:
      - puppet

  elasticsearch:
    container_name: elasticsearch
    environment:
      ES_JAVA_OPTS: -Xms1g -Xmx1g
      bootstrap.memory_lock: true
      discovery.type: single-node
      http.host: 0.0.0.0
      action.auto_create_index: false
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2
    ulimits:
      memlock:
        hard: -1
        soft: -1
    volumes:
      - es_data:/usr/share/elasticsearch/data
    restart: on-failure
    networks:
      - puppet

  graylog:
    image: graylog/graylog:4.2
    container_name: graylog
    hostname: graylog
    depends_on:
      elasticsearch:
        condition: service_started
      mongodb:
        condition: service_started
    entrypoint: "/usr/bin/tini -- wait-for-it elasticsearch:9200 --  /docker-entrypoint.sh"
    environment:
      GRAYLOG_NODE_ID_FILE: "/usr/share/graylog/data/config/node-id"
      GRAYLOG_PASSWORD_SECRET: ${GRAYLOG_PASSWORD_SECRET}
      GRAYLOG_ROOT_PASSWORD_SHA2: ${GRAYLOG_ROOT_PASSWORD_SHA2S}
      GRAYLOG_HTTP_BIND_ADDRESS: 0.0.0.0:9000
      GRAYLOG_HTTP_EXTERNAL_URI: http://localhost:9000/
      GRAYLOG_ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      GRAYLOG_MONGODB_URI: mongodb://mongodb:27017/graylog
    ports:
      - "5044:5044/tcp" # Beats
      - "5140:5140/udp" # Syslog UDP
      - "514:514/tcp" # Syslog TCP
      - "5140:5140/tcp" # Syslog TCP
      - "5555:5555/tcp" # RAW TCP
      - "5555:5555/udp" # RAW TCP
      - "9000:9000/tcp" # Server API
      - "12201:12201/tcp" # GELF TCP
      - "12201:12201/udp" # GELF UDP
      - "13301:13301/tcp" # Forwarder data
      - "13302:13302/tcp" # Forwarder config
    volumes:
      - "graylog_data:/usr/share/graylog/data/data"
      - "graylog_journal:/usr/share/graylog/data/journal"
    restart: on-failure
    networks:
      - puppet

networks:
  puppet:
    name: puppet

  internal-1:
    name: internal-1
    internal: true
    ipam:
      config:
        - subnet: 10.10.10.0/24

  internal-2:
    name: internal-2
    internal: true
    ipam:
      config:
        - subnet: 20.20.20.0/24

volumes:
  mongodb_data: null
  es_data: null
  graylog_data: null
  graylog_journal: null
